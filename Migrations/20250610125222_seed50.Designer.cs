// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ZooManagementDB;

#nullable disable

namespace ZooManagement.Migrations
{
    [DbContext(typeof(ZooManagementDBContext))]
    [Migration("20250610125222_seed50")]
    partial class seed50
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.5");

            modelBuilder.Entity("ZooManagement.Animal", b =>
                {
                    b.Property<int>("AnimalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ArrivedAtZoo")
                        .HasColumnType("TEXT");

                    b.Property<string>("Classification")
                        .HasColumnType("TEXT");

                    b.Property<string>("DOB")
                        .HasColumnType("TEXT");

                    b.Property<int>("EnclosureID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sex")
                        .HasColumnType("TEXT");

                    b.Property<string>("Species")
                        .HasColumnType("TEXT");

                    b.HasKey("AnimalId");

                    b.HasIndex("EnclosureID");

                    b.ToTable("Animals");
                });

            modelBuilder.Entity("ZooManagement.Enclosure", b =>
                {
                    b.Property<int>("EnclosureID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("EnclosureName")
                        .HasColumnType("TEXT");

                    b.Property<int>("ZooKeeperID")
                        .HasColumnType("INTEGER");

                    b.HasKey("EnclosureID");

                    b.HasIndex("ZooKeeperID");

                    b.ToTable("Enclosure");
                });

            modelBuilder.Entity("ZooManagement.EnclosureZooKeeper", b =>
                {
                    b.Property<int>("EnclosureZooKeeperID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EnclosureID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ZooKeeperID")
                        .HasColumnType("INTEGER");

                    b.HasKey("EnclosureZooKeeperID");

                    b.ToTable("EnclosureZooKeeper");
                });

            modelBuilder.Entity("ZooManagement.ZooKeeper", b =>
                {
                    b.Property<int>("ZooKeeperID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ZooKeeperName")
                        .HasColumnType("TEXT");

                    b.HasKey("ZooKeeperID");

                    b.ToTable("ZooKeeper");
                });

            modelBuilder.Entity("ZooManagement.Animal", b =>
                {
                    b.HasOne("ZooManagement.Enclosure", null)
                        .WithMany("Animals")
                        .HasForeignKey("EnclosureID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZooManagement.Enclosure", b =>
                {
                    b.HasOne("ZooManagement.ZooKeeper", null)
                        .WithMany("Enclosures")
                        .HasForeignKey("ZooKeeperID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ZooManagement.Enclosure", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("ZooManagement.ZooKeeper", b =>
                {
                    b.Navigation("Enclosures");
                });
#pragma warning restore 612, 618
        }
    }
}
